/* eslint-disable */
/**
 * This file was automatically generated by typescript-to-typebox.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run make -j to regenerate this file.
 */

import { Type, Static } from "@sinclair/typebox";

export type MapStringObject = Static<typeof MapStringObject>;
export const MapStringObject = Type.Object(
  {},
  {
    additionalProperties: Type.Object(
      {},
      {
        additionalProperties: Type.Unknown(),
      },
    ),
  },
);

export type MapStringString = Static<typeof MapStringString>;
export const MapStringString = Type.Object(
  {},
  {
    additionalProperties: Type.String(),
  },
);

export type HttpsOpencontainersOrgSchemaImageConfig = Static<
  typeof HttpsOpencontainersOrgSchemaImageConfig
>;
export const HttpsOpencontainersOrgSchemaImageConfig = Type.Object(
  {
    created: Type.Optional(Type.String()),
    author: Type.Optional(Type.String()),
    architecture: Type.String(),
    variant: Type.Optional(Type.String()),
    os: Type.String(),
    "os.version": Type.Optional(Type.String()),
    "os.features": Type.Optional(Type.Array(Type.String())),
    config: Type.Optional(
      Type.Object(
        {
          User: Type.Optional(Type.String()),
          ExposedPorts: Type.Optional(MapStringObject),
          Env: Type.Optional(Type.Array(Type.String())),
          Entrypoint: Type.Optional(Type.Union([Type.Array(Type.String()), Type.Null()])),
          Cmd: Type.Optional(Type.Union([Type.Array(Type.String()), Type.Null()])),
          Volumes: Type.Optional(Type.Union([MapStringObject, Type.Null()])),
          WorkingDir: Type.Optional(Type.String()),
          Labels: Type.Optional(Type.Union([MapStringString, Type.Null()])),
          StopSignal: Type.Optional(Type.String()),
          ArgsEscaped: Type.Optional(Type.Boolean()),
        },
        {
          additionalProperties: Type.Unknown(),
        },
      ),
    ),
    rootfs: Type.Object(
      {
        diff_ids: Type.Array(Type.String()),
        type: Type.Literal("layers"),
      },
      {
        additionalProperties: Type.Unknown(),
      },
    ),
    history: Type.Optional(
      Type.Array(
        Type.Object(
          {
            created: Type.Optional(Type.String()),
            author: Type.Optional(Type.String()),
            created_by: Type.Optional(Type.String()),
            comment: Type.Optional(Type.String()),
            empty_layer: Type.Optional(Type.Boolean()),
          },
          {
            additionalProperties: Type.Unknown(),
          },
        ),
      ),
    ),
  },
  {
    additionalProperties: Type.Unknown(),
  },
);
