/* eslint-disable */
/**
 * This file was automatically generated by typescript-to-typebox.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run make -j to regenerate this file.
 */

import { Type, Static } from "@sinclair/typebox";

export type HttpsOpencontainersOrgSchemaImageManifestSchemaVersion = Static<
  typeof HttpsOpencontainersOrgSchemaImageManifestSchemaVersion
>;
export const HttpsOpencontainersOrgSchemaImageManifestSchemaVersion = Type.Number();

export type HttpsOpencontainersOrgSchemaImageDescriptorMediaType = Static<
  typeof HttpsOpencontainersOrgSchemaImageDescriptorMediaType
>;
export const HttpsOpencontainersOrgSchemaImageDescriptorMediaType = Type.String();

export type HttpsOpencontainersOrgSchemaImageDescriptorMediaType1 = Static<
  typeof HttpsOpencontainersOrgSchemaImageDescriptorMediaType1
>;
export const HttpsOpencontainersOrgSchemaImageDescriptorMediaType1 = Type.String();

export type HttpsOpencontainersOrgSchemaImageDescriptorMediaType2 = Static<
  typeof HttpsOpencontainersOrgSchemaImageDescriptorMediaType2
>;
export const HttpsOpencontainersOrgSchemaImageDescriptorMediaType2 = Type.String();

export type Urls = Static<typeof Urls>;
export const Urls = Type.Array(Type.String());

export type HttpsOpencontainersOrgSchemaImageDescriptorMediaType3 = Static<
  typeof HttpsOpencontainersOrgSchemaImageDescriptorMediaType3
>;
export const HttpsOpencontainersOrgSchemaImageDescriptorMediaType3 = Type.String();

export type HttpsOpencontainersOrgSchemaImageManifestAnnotations = Static<
  typeof HttpsOpencontainersOrgSchemaImageManifestAnnotations
>;
export const HttpsOpencontainersOrgSchemaImageManifestAnnotations = Type.Object(
  {},
  {
    additionalProperties: Type.String(),
  },
);

export type HttpsOpencontainersOrgSchemaDescriptorAnnotations = Static<
  typeof HttpsOpencontainersOrgSchemaDescriptorAnnotations
>;
export const HttpsOpencontainersOrgSchemaDescriptorAnnotations = Type.Object(
  {},
  {
    additionalProperties: Type.String(),
  },
);

export type HttpsOpencontainersOrgSchemaDescriptor = Static<
  typeof HttpsOpencontainersOrgSchemaDescriptor
>;
export const HttpsOpencontainersOrgSchemaDescriptor = Type.Object(
  {
    mediaType: HttpsOpencontainersOrgSchemaImageDescriptorMediaType2,
    size: Type.Number(),
    digest: Type.String(),
    urls: Type.Optional(Urls),
    data: Type.Optional(Type.String()),
    artifactType: Type.Optional(HttpsOpencontainersOrgSchemaImageDescriptorMediaType3),
    annotations: Type.Optional(HttpsOpencontainersOrgSchemaDescriptorAnnotations),
  },
  {
    additionalProperties: Type.Unknown(),
  },
);

export type HttpsOpencontainersOrgSchemaImageManifest = Static<
  typeof HttpsOpencontainersOrgSchemaImageManifest
>;
export const HttpsOpencontainersOrgSchemaImageManifest = Type.Object(
  {
    schemaVersion: HttpsOpencontainersOrgSchemaImageManifestSchemaVersion,
    mediaType: Type.Optional(HttpsOpencontainersOrgSchemaImageDescriptorMediaType),
    artifactType: Type.Optional(HttpsOpencontainersOrgSchemaImageDescriptorMediaType1),
    config: HttpsOpencontainersOrgSchemaDescriptor,
    subject: Type.Optional(HttpsOpencontainersOrgSchemaDescriptor),
    layers: Type.Array(HttpsOpencontainersOrgSchemaDescriptor),
    annotations: Type.Optional(HttpsOpencontainersOrgSchemaImageManifestAnnotations),
  },
  {
    additionalProperties: Type.Unknown(),
  },
);
